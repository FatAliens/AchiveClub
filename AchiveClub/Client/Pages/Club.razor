@page "/club/{clubidparam}"
@using AchiveClub.Shared.DTO
@inject HttpClient _client
@inject NavigationManager _navigation

<header>
    <div class="heading-wrapper">
        <div id="profileSlogan">
            <div id="arrowExit">
                <a href="topclubs"><img src="./image/left-chevron.png" alt=""></a>
            </div>
            <span id="club">Клуб</span>
            <span><b>@_club.Title</b></span>
        </div>
        <div class="clubPositionLogo">
            <span id="clubPosition">#@_club.Position</span>
            <img src="@_club.LogoURL" alt="">
        </div>
    </div>
</header>
<main>
    <div class="historyClub">
        <h3>История клуба:</h3>
        <p id="textHistoryClub">
            @_club.Description
        </p>
        <p id="adressHistoryClub">@_club.Address</p>
    </div>
    <div class="topThreeUsers">
        <div class="topThreeUsersHead">
            <h3>Топ <b>@_club.Users.Count</b> игроков: </h3>
        </div>
        @foreach (var user in _club.Users)
        {
            <div class="@GetUserClass(user)">
                <div class="userImage">
                    <img src="@user.Avatar" alt="">
                </div>
                <div class="userAboutWrapper">
                    <div class="nameSurnameUser">
                        <span>@user.FirstName @user.LastName</span>
                    </div>
                    <div class="xpCountUser">
                        <span>@user.XPSum XP</span>
                    </div>
                </div>
                <div class="ClubLogoAndPositionUser">
                    <div class="topPositionUser">
                        <span>#@(_club.Users.IndexOf(user)+1)</span>
                    </div>
                </div>
            </div>
        }
    </div>
</main>
@code {
    [Parameter]
    public string ClubIdParam { get; set; }

    private ClubInfo _club;

    protected async override Task OnInitializedAsync()
    {
        await UpdateClubAsync();
    }

    private async Task UpdateClubAsync()
    {
        _club = await _client.GetFromJsonAsync<ClubInfo>($"/api/Clubs/{ClubIdParam}");
    }

    private string GetUserClass(SmallUserInfo user)
    {
        int number = _club.Users.IndexOf(user);
        switch (number)
        {
            case 0:
                return "topOneUser";
            case 1:
                return "topTwoUser";
            case 2:
                return "topThreeUser";
            default:
                return "topUser";
        }
    }
}